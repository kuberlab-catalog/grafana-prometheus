apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prometheus-core
  labels:
    app: prometheus
    component: core
spec:
  replicas: 1
  template:
    metadata:
      name: prometheus-main
      labels:
        app: prometheus
        component: core
    spec:
      {{- if .Values.nodeSelector.enabled }}
      nodeSelector:
      {{- range $key, $value := .Values.nodeSelector.labels }}
        {{ $key }}: "{{ $value }}"
      {{- end }}
      {{- end }}
      securityContext:
        runAsUser: 0
      {{- if .Values.RBAC }}
      serviceAccountName: prometheus-sa
      {{- end }}
      containers:
      - name: prometheus
        image: prom/prometheus:v2.3.2
        args:
          - '--storage.tsdb.retention=7d'
          - '--storage.tsdb.no-lockfile'
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus/'
        ports:
        - name: webui
          containerPort: 9090
        resources:
          requests:
            cpu: 500m
            memory: 2Gi
          limits:
            cpu: 2000m
            memory: 8Gi
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        - name: data
          mountPath: /prometheus
      volumes:
      - name: config-volume
        configMap:
          defaultMode: 420
          name: prometheus-core
      - name: data
        {{- if .Values.prometheus.persistence.enabled }}
        {{- if .Values.prometheus.persistence.fromProvider }}
        persistentVolumeClaim:
          claimName: prometheus-storage
        {{- else }}
{{ toYaml .Values.prometheus.persistence.volume | indent 8 }}
        {{- end }}
        {{- else }}
        emptyDir: {}
        {{- end }}