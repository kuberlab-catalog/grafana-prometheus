apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-core
  labels:
    app: grafana
    component: core
spec:
  selector:
    matchLabels:
      app: grafana
      component: core
  replicas: 1
  template:
    metadata:
      labels:
        app: grafana
        component: core
    spec:
      {{- if .Values.nodeSelector.enabled }}
      nodeSelector:
      {{- range $key, $value := .Values.nodeSelector.labels }}
        {{ $key }}: "{{ $value }}"
      {{- end }}
      {{- end }}
      containers:
      - image: grafana/grafana:4.6.4
        name: grafana-core
        imagePullPolicy: IfNotPresent
        # env:
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        env:
          # The following env variables set up basic auth twith the default admin user and admin password.
          - name: GF_AUTH_BASIC_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "true"
          - name: GF_SERVER_ROOT_URL
            value: "{{ .Values.grafana.rootUrl }}"
          # initialDelaySeconds: 30
          # timeoutSeconds: 1
        volumeMounts:
        - name: grafana-persistent-storage
          mountPath: /var/lib/grafana
      volumes:
      - name: grafana-persistent-storage
        {{- if .Values.grafana.persistence.enabled }}
        {{- if .Values.grafana.persistence.fromProvider }}
        persistentVolumeClaim:
          claimName: grafana-storage
        {{- else }}
{{ toYaml .Values.grafana.persistence.volume | indent 8 }}
        {{- end }}
        {{- else }}
        emptyDir: {}
        {{- end }}
